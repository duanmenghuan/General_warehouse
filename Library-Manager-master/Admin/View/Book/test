在取样位置，我们使用d1和d2来表示两个像素和线路径的偏移。在像素列位置xk+1处的直线上的y坐标可计算为：
y=m(xk+1)+b
那么：
d1=y-yk=m(xk+1)+b-yk
d2=(yk+1)-y=yk+1-m(xk+1)-b
要确定那个像素点更接近于线路径，需测试这两个像素的偏移的差：
d1-d2=2m(xk+1)-2yk+2b-1
为了使用整数进行计算，将决策参数定义为：
pk=dx*(d1-d2)=2dy*xk-2dx*yk+c
pk和d1-d2符号相同。其中m=dy/dx，c=2dy+dx(2b-1)。C是常量，与像素位置无关且会在循环计算pk时被消除。假如yk处的像素比yk+1处的像素更接近于线路径，则pk为负，绘制下面的像素。反之为正，绘制上面的像素。
我们可以利用递增整数运算得到后继的决策参数值。由k的式子可以得出：
pk+1=2dy*xk+1-2dx*yk+1+c
则：
pk+1-pk=2dy(xk+1-xk)-2dx(yk+1-yk)
pk+1=pk+2dy-2dx(yk+1-yk)
而yk+1-yk取1或者0取决于pk的符号。
而起始像素位置(x0,y0)的参数p0可以计算得出：
p0=2dy-dx
由此可以得出斜率大于0小于1的Bresenham画线算法步骤如下：
1、输入线段两个端点坐标，将左端点存储在(x0,y0)中；
2、画出第一个点。
3、计算常量dx,dy,2dy,2dy-2dx。得出第一个决策参数：
p0=2dy-dx
4、k=0开始，在沿线路径的每个xk处，进行如下计算：
若pk<0，下一个要绘制的点是(xk+1,yk),且
pk+1=pk+2dy。
5、重复步骤4.